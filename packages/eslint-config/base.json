{
  "$schema": "https://json.schemastore.org/eslintrc",
  "env": {
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./**/tsconfig.json"]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["./**/tsconfig.json"]
      }
    }
  },
  "ignorePatterns": ["*.js", "*.cjs", "*.mjs"],
  "extends": [
    "turbo",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:promise/recommended",
    "plugin:unicorn/recommended",
    "plugin:sonarjs/recommended"
  ],
  "rules": {
    "eqeqeq": ["error", "always"],
    "max-params": ["error", 3],
    "no-console": [
      "error",
      {
        "allow": ["info", "error", "warn"]
      }
    ],
    "no-implicit-coercion": "error",
    "prefer-arrow-callback": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
        "allowSeparatedGroups": true
      }
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/consistent-type-exports": [
      "error",
      {
        "fixMixedExportsWithInlineTypeSpecifier": true
      }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "fixStyle": "separate-type-imports"
      }
    ],
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": ["enumMember", "typeLike"],
        "format": ["StrictPascalCase"]
      },
      {
        "selector": ["variable"],
        "format": ["strictCamelCase", "StrictPascalCase"]
      },
      {
        "selector": ["typeProperty"],
        "format": ["strictCamelCase"]
      },
      {
        "selector": ["typeProperty", "variable"],
        "types": ["boolean"],
        "prefix": ["as", "has", "is"],
        "format": ["StrictPascalCase"]
      },
      {
        "selector": "variable",
        "modifiers": ["destructured"],
        "format": null
      }
    ],
    "@typescript-eslint/no-confusing-void-expression": [
      "error",
      {
        "ignoreArrowShorthand": true
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ],
    "@typescript-eslint/padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "block-like",
          "const",
          "export",
          "function",
          "import",
          "let",
          "return",
          "throw",
          "type"
        ]
      },
      {
        "blankLine": "any",
        "prev": ["const", "let"],
        "next": ["const", "let"]
      },
      {
        "blankLine": "any",
        "prev": ["export", "import"],
        "next": ["export", "import"]
      }
    ],
    "@typescript-eslint/prefer-enum-initializers": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "import/first": "error",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc"
        },
        "groups": ["builtin", "external", "internal", "parent", "sibling"],
        "newlines-between": "always",
        "pathGroups": [
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": [],
        "warnOnUnassignedImports": true
      }
    ],
    "promise/prefer-await-to-then": "error",
    "unicorn/no-null": "off",
    "unicorn/no-useless-undefined": [
      "error",
      {
        "checkArguments": false
      }
    ],
    "unicorn/prevent-abbreviations": [
      "error",
      {
        "replacements": {
          "args": false,
          "ctx": false,
          "dst": false,
          "env": false,
          "params": false,
          "props": false,
          "ref": false,
          "req": false,
          "res": false,
          "src": false
        }
      }
    ]
  },
  "overrides": [
    {
      "files": ["*.d.ts"],
      "rules": {
        "@typescript-eslint/consistent-type-definitions": "off",
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      "files": ["*.test.{ts,tsx}", "**/__mocks__/**"],
      "rules": {
        "sonarjs/no-duplicate-string": "off",
        "unicorn/no-useless-promise-resolve-reject": "off"
      }
    }
  ]
}
